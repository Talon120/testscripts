#!/usr/bin/expect -f

# Program name: test_iperf
# Created by:   Talon Jones
# Created:      17 Oct. 2016
# Updated:      26 Oct. 2016
# Purpose:      Expect script to ssh into [IP]s and initiate selected iPerf test.
# Usage:        ./test_iperf [IPclient] [IPserver] [PW] [Test] [Duration]

set timeout -1
set addrC [lindex $argv 0]
set addrS [lindex $argv 1]
set pw [lindex $argv 2]
set test [lindex $argv 3]
set dur [lindex $argv 4]
set prompt "$"

if {$test == "1"} {
	set test "iperf3 -c $addrS -p 3344 -V -u -t $dur --logfile log_test1"
	puts "\n1s UDP tests for $dur seconds. Log file: log_test1\n"
} elseif {$test == "2"} {
	set test "iperf3 -c $addrS -p 3344 -V -t $dur --logfile log_test2"
	puts "\n1s TCP tests for $dur seconds. Log file: log_test2\n"
} elseif {$test == "3"} {
	set test "iperf3 -c $addrS -p 3344 -V -t $dur -i 10 --logfile log_test3"
	puts "\nPeriodic TCP tests every 10s for $dur seconds. Log file: log_test3\n"
} else {
	puts "-----No/invalid test specified. Exiting now.-----\n"
	exit
}
puts "$test\n"

#
# Begin Server Commands
#

eval spawn ssh -o PubkeyAuthentication=no $addrS
expect {
        "(yes/no)" { send "yes\r"; exp_continue }
        "password:"
}
send -- "$pw\r"

expect -ex $prompt {
	send -- "ps -aux | grep 'iperf3' | grep -v 'grep'\r"
	send -- "greprc=\$?\r"
	send -- "if \[\[ \$greprc -eq 1 \]\]; then\r"

	send -- "echo 'Starting up Iperf server.'\r"
	send -- "nohup iperf3 -p 3344 -s &\r"
	sleep 1
	send -- "disown\r"

	send -- "else\r"

	send -- "ls | grep 'nohup.out'\r"
	send -- "greprc=\$?\r"
	send -- "if \[\[ \$greprc -eq 1 \]\]; then\r"

	send -- "echo 'Iperf server logfile not found. Restarting server.'\r"
	send -- "kill \$(ps -aux | grep 'iperf3' | grep -v 'grep' | awk '\{printf \$2\}')\r"
	send -- "nohup iperf3 -p 3344 -s &\r"
	sleep 1
	send -- "disown\r"

	send -- "else\r"
	send -- "echo 'Iperf server already running and logfile found.'\r"
	send -- "fi\r"

	send -- "fi\r"
}

sleep 1
expect -ex $prompt
#interact
send -- "logout\r"
sleep 2

#
# Begin Client Commands
#

eval spawn ssh -o PubkeyAuthentication=no $addrC
expect {
	"(yes/no)" { send "yes\r"; exp_continue}
	"password:"
}
send -- "$pw\r"

expect -ex $prompt
send -- "$test &\r"
expect -ex $prompt
send -- "disown\r"

sleep 1
expect -ex $prompt
#interact
send -- "logout\r"
sleep 2

exit
